/****
 * 
 * printf()
 *
 * printf(" % [flags] [width] [.precision] conversion-character
 * 
 * 
 * [flag] - : left alignment (default alignment) + : output a plus ( + ) or
 * minus ( - ) sign for a numerical value 0 : forces numerical values to be
 * zero-padded ( default is blank padding ) , : comma grouping separator (for
 * numbers > 1000) ' ' : space will display a minus sign if the number is
 * negative or a space if it is positive
 * 
 * 
 * [width] Specifies the field width for outputting the argument.
 * 
 * 
 * [.precision] Specifies the floating-point values or the length
 * 
 * 
 * conversion-character d : decimal integer [byte, short, int, long] f :
 * floating-point number [float, double] c : character Capital C will uppercase
 * the letter s : String Capital S will uppercase all the letters in the string
 * h : hashcode A hashcode is like an address. This is useful for printing a
 * reference n : newline Platform specific newline character- use %n instead of
 * \n for greater compatibility
 * 
 */